@model IEnumerable<FYP.DB.DBTables.Account_Move>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
<div class="container">
<p>
    <a asp-action="Create">Create New</a>
</p>
    <div class="table-responsive">
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Doc_Name)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.Total_Amount)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Date_Created)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.Taxed_Amount)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.operation_type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.tax)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Source_DocNavigation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.purchase_source_docNavigation)
            </th>
            <th>@Html.DisplayNameFor(model=>model.paid)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Doc_Name)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.Total_Amount)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Date_Created)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.Taxed_Amount)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.operation_type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.tax)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Source_DocNavigation.name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.purchase_source_docNavigation.doc_name)
            </td>
            <td>@Html.DisplayFor(modelItem=>item.paid.Value)</td>
            <td>
                @if(item.Status !="Posted"){
                <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> 
                                    }
                <a asp-action="Details" asp-route-id="@item.ID">Details</a> 
                            @if (item.Status != "Posted")
                            {
                                <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                            }
                @if(item.paid != true){
                    <a asp-action="MarkasPaid" asp-route-id="@item.ID">Confirm Payment</a>
                            }
                            @{
                                bool shouldShowText = item.operation_type=="Invoice"; // Replace with your actual condition
                                string textToShow = shouldShowText ? "Invoice" : "Bill";
                            }
                            @if (item.Status != "Posted")
                            {
                                <a asp-action="MarkasPosted" asp-route-id="@item.ID">Post @textToShow</a>
                            }
                        </td>
        </tr>
}
    </tbody>
</table>
    </div>
</div>