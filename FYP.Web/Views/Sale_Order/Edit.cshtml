@*@model FYP.DB.DBTables.Sale_Order*@
@model FYP.DB.ViewModels.SalesViewModel

@{
    ViewData["Title"] = "Edit Sale Order";
}

<h1>Edit</h1>
@using (Html.BeginForm("Edit", "Sale_order", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<h4>Sale Order @Html.DisplayFor(model => model.SaleOrder.name)</h4>
<hr />
<div class="row">
    <div class="col-md-12">
        @*<form asp-action="Edit">*@
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="SaleOrder.sale_id" />
            <div class="row">
                <div class="col-12">
                    <div class="form-group">
                        <label asp-for="SaleOrder.customer_id" class="control-label"></label>
                        <select asp-for="SaleOrder.customer_id" class="form-control" asp-items="ViewBag.customer_id"></select>
                        <span asp-validation-for="SaleOrder.customer_id" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                
                <div class="col-6">
                    <div class="form-group">
                        <label asp-for="SaleOrder.name" class="control-label"></label>
                        <input type="text" asp-for="SaleOrder.name" class="form-control" readonly="1" />
                        <span asp-validation-for="SaleOrder.name" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-6">
                    <div class="form-group">
                        <label asp-for="SaleOrder.total_amount" class="control-label"></label>
                        <input id="totalAmountInput" asp-for="SaleOrder.total_amount" class="form-control" readonly="1" />
                        <span asp-validation-for="SaleOrder.total_amount" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-6">
                    <div class="form-group">
                        <label asp-for="SaleOrder.payment_method" class="control-label"></label>
                        <select asp-for="SaleOrder.payment_method" class="form-control" asp-items="ViewBag.payment_method"></select>
                        <span asp-validation-for="SaleOrder.payment_method" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-6">
                    <div class="form-group">
                        <label asp-for="SaleOrder.date_created" class="control-label"></label>
                        <input asp-for="SaleOrder.date_created" class="form-control" />
                        <span asp-validation-for="SaleOrder.date_created" class="text-danger"></span>
                    </div>
                </div>
            </div>
            
            <div class="form-group">
                <label asp-for="SaleOrder.state" class="control-label"></label>
                <input asp-for="SaleOrder.state" class="form-control" readonly="1" />
                <span asp-validation-for="SaleOrder.state" class="text-danger"></span>
            </div>
            <div class="row"></div>

            
        @*</form>*@
    </div>
</div>
<div class="row">
    <div class="col-9">
        <h4>Line Items</h4>
    </div>
    <div class="col-3 text-right">
        <button type="button" id="addLineItem" class="btn btn-primary">Add Line Item</button>
    </div>
</div>
<br>
<div class="row">
    <table class="table table-bordered border-dark table-responsive">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="lineItemsBody">
            @for (int i = 0; i < Model.SaleItems.Count; i++)
            {
                <tr>
                    <td>
                        @Html.DropDownListFor(model => model.SaleItems[i].product_id, (SelectList)ViewData["product_id"], "Select a Product", new { @class = "form-control" })
                        <span asp-validation-for="SaleItems[i].product_id" class="text-danger"></span>
                    </td>
                    <td>
                        <input type="number" asp-for="SaleItems[i].quantity" class="form-control" />
                        <span asp-validation-for="SaleItems[i].quantity" class="text-danger"></span>
                    </td>
                    <td>
                        <input type="number" asp-for="SaleItems[i].price" class="form-control" />
                        <span asp-validation-for="SaleItems[i].price" class="text-danger"></span>
                    </td>
                    <td>
                        <button type="button" class="btn btn-danger removeLineItem">Remove</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<br />
    <div class="row">
        <div class="col-2">
        <input type="submit" value="Save" class="btn btn-primary" />
        </div>
        <div class="col-2">
            <a asp-action="Index" class="btn btn-success">Back to List</a>
        </div>

    </div>
}
@*<div>
    <a asp-action="Index">Back to List</a>
</div>*@

@*@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
*@

@section Scripts {
    <script>
        $(document).ready(function () {
            var index = @Model.SaleItems.Count;

            $('#addLineItem').click(function () {
                var newRow = '<tr>' +
                    '<td><select class="form-control" name="SaleItems[' + index + '].product_id"><option value="">Select a Product</option></select></td>' +
                    '<td><input type="number" class="form-control" name="SaleItems[' + index + '].quantity" required/></td>' +
                    '<td><input type="number" class="form-control" name="SaleItems[' + index + '].price" required/></td>' +
                    '<td><button type="button" class="btn btn-danger removeLineItem">Remove</button></td>' +
                    '</tr>';

                $('#lineItemsBody').append(newRow);

                var select = $('select[name="SaleItems[' + index + '].product_id"]');
                $.get('@Url.Action("GetProducts", "Products")', function (data) {
                    select.empty();
                    $.each(data, function (index, item) {
                        select.append($('<option></option>').val(item.value).text(item.text));
                    });
                });

                index++;
            });

            $(document).on('click', '.removeLineItem', function () {
                $(this).closest('tr').remove();
            });
        });

        function updateTotalAmount() {
            var totalAmount = 0;

            $('#lineItemsBody tr').each(function () {
                var quantity = parseFloat($(this).find('[name$=".quantity"]').val());
                var price = parseFloat($(this).find('[name$=".price"]').val());

                if (!isNaN(quantity) && !isNaN(price)) {
                    totalAmount += quantity * price;
                }
            });

            $('#totalAmountInput').val(totalAmount.toFixed(2));
        }

        $(document).ready(function () {
            updateTotalAmount();

            $('#lineItemsBody').on('input', 'input', function () {
                updateTotalAmount();
            });

            $('#lineItemsBody').on('change', 'select', function () {
                updateTotalAmount();
            });
        });

    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
